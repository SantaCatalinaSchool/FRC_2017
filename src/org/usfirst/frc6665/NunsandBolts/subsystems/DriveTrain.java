// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6665.NunsandBolts.subsystems;

import org.usfirst.frc6665.NunsandBolts.RobotMap;
import org.usfirst.frc6665.NunsandBolts.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Joystick.AxisType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;


/**
 *
 */
public class DriveTrain extends Subsystem {


    private final SpeedController leftFrontMotor;
    private final SpeedController leftBackMotor;
    private final SpeedController rightFrontMotor;
    private final SpeedController rightBackMotor;
    private final RobotDrive robotDrive41;

    public DriveTrain(){
    	leftFrontMotor = RobotMap.driveTrainSpeedController1;
    	leftBackMotor = RobotMap.driveTrainSpeedController2;
    	rightFrontMotor = RobotMap.driveTrainSpeedController3;
    	rightBackMotor = RobotMap.driveTrainSpeedController4;
    	robotDrive41 = RobotMap.driveTrainRobotDrive41;
    	
    	
		LiveWindow.addActuator("Drive Train", "FrontLeft Motor", (Spark) leftFrontMotor);
		LiveWindow.addActuator("Drive Train", "Back Left Motor", (Spark) leftBackMotor);
		LiveWindow.addActuator("Drive Train", "Front Right Motor", (Spark) rightFrontMotor);
		LiveWindow.addActuator("Drive Train", "Back Right Motor", (Spark) rightBackMotor);
    }
    
    public void initDefaultCommand(){
    	setDefaultCommand(new DriveTrain_JoystickDrive());
    }
/*
    public void arcadeDrive(double yAxis, double xAxis){
    	yAxis = yAxis*Math.abs(yAxis);
		xAxis = xAxis*Math.abs(xAxis);
    }*/
    
	public void drive(double left, double right) {
		robotDrive41.tankDrive(left, right);
	}

	public void drive(Joystick joystick) {
		drive(-joystick.getY(), -joystick.getAxis(AxisType.kThrottle));
		
	}
    
    
}

